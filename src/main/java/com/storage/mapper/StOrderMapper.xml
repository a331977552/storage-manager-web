<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.storage.mapper.StOrderMapper">
  <resultMap id="BaseResultMap" type="com.storage.entity.StOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="payment" jdbcType="VARCHAR" property="payment" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="totalPrice" jdbcType="INTEGER" property="totalprice" />
    <result column="shippingfee" jdbcType="INTEGER" property="shippingfee" />
    <result column="createdTime" jdbcType="DATE" property="createdtime" />
    <result column="updateTime" jdbcType="DATE" property="updatetime" />
    <result column="closedTime" jdbcType="DATE" property="closedtime" />
    <result column="buyerName" jdbcType="VARCHAR" property="buyername" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="customerId" jdbcType="INTEGER" property="customerid" />
    <result column="shippingTime" jdbcType="DATE" property="shippingtime" />
    <result column="orderNumber" jdbcType="VARCHAR" property="ordernumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, payment, status, totalPrice, shippingfee, createdTime, updateTime, closedTime, 
    buyerName, comment, customerId, shippingTime, orderNumber
  </sql>
  <select id="selectByExample" parameterType="com.storage.entity.StOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from st_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from st_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from st_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.storage.entity.StOrderExample">
    delete from st_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.storage.entity.StOrder">
  <selectKey keyColumn="id" keyProperty="id" resultType="Integer" order="AFTER">select last_insert_id()</selectKey>
    insert into st_order (id, payment, status, 
      totalPrice, shippingfee, createdTime, 
      updateTime, closedTime, buyerName, 
      comment, customerId, shippingTime, 
      orderNumber)
    values (#{id,jdbcType=INTEGER}, #{payment,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{totalprice,jdbcType=INTEGER}, #{shippingfee,jdbcType=INTEGER}, #{createdtime,jdbcType=DATE}, 
      #{updatetime,jdbcType=DATE}, #{closedtime,jdbcType=DATE}, #{buyername,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR}, #{customerid,jdbcType=INTEGER}, #{shippingtime,jdbcType=DATE}, 
      #{ordernumber,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.storage.entity.StOrder">
    insert into st_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="totalprice != null">
        totalPrice,
      </if>
      <if test="shippingfee != null">
        shippingfee,
      </if>
      <if test="createdtime != null">
        createdTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="closedtime != null">
        closedTime,
      </if>
      <if test="buyername != null">
        buyerName,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="customerid != null">
        customerId,
      </if>
      <if test="shippingtime != null">
        shippingTime,
      </if>
      <if test="ordernumber != null">
        orderNumber,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="totalprice != null">
        #{totalprice,jdbcType=INTEGER},
      </if>
      <if test="shippingfee != null">
        #{shippingfee,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null">
        #{createdtime,jdbcType=DATE},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=DATE},
      </if>
      <if test="closedtime != null">
        #{closedtime,jdbcType=DATE},
      </if>
      <if test="buyername != null">
        #{buyername,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="customerid != null">
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="shippingtime != null">
        #{shippingtime,jdbcType=DATE},
      </if>
      <if test="ordernumber != null">
        #{ordernumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.storage.entity.StOrderExample" resultType="java.lang.Long">
    select count(*) from st_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update st_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.payment != null">
        payment = #{record.payment,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.totalprice != null">
        totalPrice = #{record.totalprice,jdbcType=INTEGER},
      </if>
      <if test="record.shippingfee != null">
        shippingfee = #{record.shippingfee,jdbcType=INTEGER},
      </if>
      <if test="record.createdtime != null">
        createdTime = #{record.createdtime,jdbcType=DATE},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=DATE},
      </if>
      <if test="record.closedtime != null">
        closedTime = #{record.closedtime,jdbcType=DATE},
      </if>
      <if test="record.buyername != null">
        buyerName = #{record.buyername,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.customerid != null">
        customerId = #{record.customerid,jdbcType=INTEGER},
      </if>
      <if test="record.shippingtime != null">
        shippingTime = #{record.shippingtime,jdbcType=DATE},
      </if>
      <if test="record.ordernumber != null">
        orderNumber = #{record.ordernumber,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update st_order
    set id = #{record.id,jdbcType=INTEGER},
      payment = #{record.payment,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      totalPrice = #{record.totalprice,jdbcType=INTEGER},
      shippingfee = #{record.shippingfee,jdbcType=INTEGER},
      createdTime = #{record.createdtime,jdbcType=DATE},
      updateTime = #{record.updatetime,jdbcType=DATE},
      closedTime = #{record.closedtime,jdbcType=DATE},
      buyerName = #{record.buyername,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      customerId = #{record.customerid,jdbcType=INTEGER},
      shippingTime = #{record.shippingtime,jdbcType=DATE},
      orderNumber = #{record.ordernumber,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.storage.entity.StOrder">
    update st_order
    <set>
      <if test="payment != null">
        payment = #{payment,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="totalprice != null">
        totalPrice = #{totalprice,jdbcType=INTEGER},
      </if>
      <if test="shippingfee != null">
        shippingfee = #{shippingfee,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null">
        createdTime = #{createdtime,jdbcType=DATE},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=DATE},
      </if>
      <if test="closedtime != null">
        closedTime = #{closedtime,jdbcType=DATE},
      </if>
      <if test="buyername != null">
        buyerName = #{buyername,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="customerid != null">
        customerId = #{customerid,jdbcType=INTEGER},
      </if>
      <if test="shippingtime != null">
        shippingTime = #{shippingtime,jdbcType=DATE},
      </if>
      <if test="ordernumber != null">
        orderNumber = #{ordernumber,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.storage.entity.StOrder">
    update st_order
    set payment = #{payment,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      totalPrice = #{totalprice,jdbcType=INTEGER},
      shippingfee = #{shippingfee,jdbcType=INTEGER},
      createdTime = #{createdtime,jdbcType=DATE},
      updateTime = #{updatetime,jdbcType=DATE},
      closedTime = #{closedtime,jdbcType=DATE},
      buyerName = #{buyername,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      customerId = #{customerid,jdbcType=INTEGER},
      shippingTime = #{shippingtime,jdbcType=DATE},
      orderNumber = #{ordernumber,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>