<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.storage.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="com.storage.entity.Product">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="buyingPrice" jdbcType="INTEGER" property="buyingprice" />
    <result column="sellingPrice" jdbcType="INTEGER" property="sellingprice" />
    <result column="createdTime" jdbcType="DATE" property="createdtime" />
    <result column="supplier" jdbcType="VARCHAR" property="supplier" />
    <result column="vat" jdbcType="REAL" property="vat" />
    <result column="updateTime" jdbcType="DATE" property="updatetime" />
    <result column="barcode" jdbcType="VARCHAR" property="barcode" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="subtitle" jdbcType="VARCHAR" property="subtitle" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.storage.entity.Product">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, quantity, buyingPrice, sellingPrice, createdTime, supplier, vat, updateTime, 
    barcode, category, title, subtitle, status
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.storage.entity.ProductExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.storage.entity.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectNameByExample" parameterType="com.storage.entity.ProductExample" resultType="com.storage.entity.custom.CustomeProductName">
    select
    <if test="distinct">
      distinct
    </if>
 	id, name 
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.storage.entity.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.storage.entity.Product">
  <selectKey keyColumn="id" keyProperty="id" order="AFTER" resultType="Integer" >
  select last_insert_id();
  </selectKey>
    insert into product (id, name, quantity, 
      buyingPrice, sellingPrice, createdTime, 
      supplier, vat, updateTime, 
      barcode, category, title, 
      subtitle, status, content
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{quantity,jdbcType=INTEGER}, 
      #{buyingprice,jdbcType=INTEGER}, #{sellingprice,jdbcType=INTEGER}, #{createdtime,jdbcType=DATE}, 
      #{supplier,jdbcType=VARCHAR}, #{vat,jdbcType=REAL}, #{updatetime,jdbcType=DATE}, 
      #{barcode,jdbcType=VARCHAR}, #{category,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{subtitle,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.storage.entity.Product">
    <selectKey keyColumn="id" keyProperty="id" order="AFTER" resultType="Integer" >select last_insert_id();</selectKey>
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="buyingprice != null">
        buyingPrice,
      </if>
      <if test="sellingprice != null">
        sellingPrice,
      </if>
      <if test="createdtime != null">
        createdTime,
      </if>
      <if test="supplier != null">
        supplier,
      </if>
      <if test="vat != null">
        vat,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
      <if test="barcode != null">
        barcode,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="subtitle != null">
        subtitle,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="buyingprice != null">
        #{buyingprice,jdbcType=INTEGER},
      </if>
      <if test="sellingprice != null">
        #{sellingprice,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null">
        #{createdtime,jdbcType=DATE},
      </if>
      <if test="supplier != null">
        #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="vat != null">
        #{vat,jdbcType=REAL},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=DATE},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="subtitle != null">
        #{subtitle,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.storage.entity.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.buyingprice != null">
        buyingPrice = #{record.buyingprice,jdbcType=INTEGER},
      </if>
      <if test="record.sellingprice != null">
        sellingPrice = #{record.sellingprice,jdbcType=INTEGER},
      </if>
      <if test="record.createdtime != null">
        createdTime = #{record.createdtime,jdbcType=DATE},
      </if>
      <if test="record.supplier != null">
        supplier = #{record.supplier,jdbcType=VARCHAR},
      </if>
      <if test="record.vat != null">
        vat = #{record.vat,jdbcType=REAL},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=DATE},
      </if>
      <if test="record.barcode != null">
        barcode = #{record.barcode,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.subtitle != null">
        subtitle = #{record.subtitle,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update product
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=INTEGER},
      buyingPrice = #{record.buyingprice,jdbcType=INTEGER},
      sellingPrice = #{record.sellingprice,jdbcType=INTEGER},
      createdTime = #{record.createdtime,jdbcType=DATE},
      supplier = #{record.supplier,jdbcType=VARCHAR},
      vat = #{record.vat,jdbcType=REAL},
      updateTime = #{record.updatetime,jdbcType=DATE},
      barcode = #{record.barcode,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      subtitle = #{record.subtitle,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=INTEGER},
      buyingPrice = #{record.buyingprice,jdbcType=INTEGER},
      sellingPrice = #{record.sellingprice,jdbcType=INTEGER},
      createdTime = #{record.createdtime,jdbcType=DATE},
      supplier = #{record.supplier,jdbcType=VARCHAR},
      vat = #{record.vat,jdbcType=REAL},
      updateTime = #{record.updatetime,jdbcType=DATE},
      barcode = #{record.barcode,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      subtitle = #{record.subtitle,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.storage.entity.Product">
    update product
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="buyingprice != null">
        buyingPrice = #{buyingprice,jdbcType=INTEGER},
      </if>
      <if test="sellingprice != null">
        sellingPrice = #{sellingprice,jdbcType=INTEGER},
      </if>
      <if test="createdtime != null">
        createdTime = #{createdtime,jdbcType=DATE},
      </if>
      <if test="supplier != null">
        supplier = #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="vat != null">
        vat = #{vat,jdbcType=REAL},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=DATE},
      </if>
      <if test="barcode != null">
        barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="subtitle != null">
        subtitle = #{subtitle,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.storage.entity.Product">
    update product
    set name = #{name,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      buyingPrice = #{buyingprice,jdbcType=INTEGER},
      sellingPrice = #{sellingprice,jdbcType=INTEGER},
      createdTime = #{createdtime,jdbcType=DATE},
      supplier = #{supplier,jdbcType=VARCHAR},
      vat = #{vat,jdbcType=REAL},
      updateTime = #{updatetime,jdbcType=DATE},
      barcode = #{barcode,jdbcType=VARCHAR},
      category = #{category,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      subtitle = #{subtitle,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.storage.entity.Product">
    update product
    set name = #{name,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      buyingPrice = #{buyingprice,jdbcType=INTEGER},
      sellingPrice = #{sellingprice,jdbcType=INTEGER},
      createdTime = #{createdtime,jdbcType=DATE},
      supplier = #{supplier,jdbcType=VARCHAR},
      vat = #{vat,jdbcType=REAL},
      updateTime = #{updatetime,jdbcType=DATE},
      barcode = #{barcode,jdbcType=VARCHAR},
      category = #{category,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      subtitle = #{subtitle,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>